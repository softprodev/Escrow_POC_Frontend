{"version":3,"sources":["theme/index.ts","components/Layout.tsx","components/Identicon.tsx","components/AccountModal.tsx","redux/blockchain/blockchainReducer.tsx","redux/data/dataReducer.tsx","redux/store.tsx","redux/data/dataActions.tsx","redux/blockchain/blockchainActions.tsx","routerHistory.ts","components/ConnectButton.tsx","views/Home/components/ManagePage.tsx","views/Home/Home.tsx","views/EscrowProvider/components/EProvider.tsx","views/EscrowProvider/EscrowProvider.tsx","views/EscrowProducer/components/EProducer.tsx","views/EscrowProducer/EscrowProducer.tsx","App.tsx","index.tsx"],"names":["extendTheme","fonts","heading","body","Layout","children","width","margin","bg","display","StyledIdenticon","styled","div","Identicon","ref","useRef","account","useEthers","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","slice","AccountModal","isOpen","onClose","txStatus","deactivate","isCentered","size","background","border","borderStyle","borderColor","borderRadius","color","px","fontSize","fontWeight","_hover","pt","pb","mb","justifyContent","alignItems","variant","height","textDecoration","onClick","mt","lineHeight","ml","length","alignContent","m","Copy","mr","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","overflow","initialState","loading","smartContract","activeProducers","activeProviders","contractOwnerAddress","activeAssetTypes","web3","errorMsg","isconnected","blockchainReducer","state","action","type","payload","totalSupply","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","console","log","dispatch","a","getState","methods","getProducerInfoArray","call","ActiveProducerArray","connectFailed","connect","fetch","headers","Accept","abiResponse","json","abi","configResponse","CONFIG","window","ethereum","metamaskIsInstalled","isMetaMask","Web3","setProvider","request","method","accounts","networkId","NETWORK","ID","toString","SmartContractObj","eth","Contract","CONTRACT_ADDRESS","getProviderInfoArray","ActiveProviderArray","getAssetsTypeArray","ActiveAssetTypesArray","owner","producersTempArray","_i","push","providersTempArray","assetTypesTempArray","on","accountsChanged","updateAccount","location","reload","NAME","history","createBrowserHistory","ConnectButton","handleOpenModal","walletconnection","activateBrowserWallet","etherBalance","useEtherBalance","className","parseFloat","formatEther","toFixed","StyledHeaderDiv0","StyledSectionDiv0","section","StyledButton0","button","StyledButtonDivImage","StyledButtonDiv0","StyledSmallTitle","h1","h4","StyledContainerDiv","StyledContainerDiv0","StyledProducerDiv1","StyledProducerDiv0","StyledProducerText0","StyledProducerText1","Styledtd","td","Styledth","th","StyledImg","img","StyledHeaderDiv1","StyledHeaderDiv3","StyledHeaderDiv4","StyledHeaderTitle1","StyledHeaderVerticalLine","StyledHeaderDiv2","StyledHeaderTitle2","ManagePage","escrowBlockchain","actionEnabled","activeProducerArray","activeProviderArray","activeAssetTypesArray","setTxStatus","useDisclosure","onOpen","useState","assetsFunded","setAssetsFunded","assetsRedeemed","setAssetsRedeemed","escrowOutstanding","setEscrowOutstanding","totalRebateReceived","setTotalRebateReceived","useHistory","_assetsFunded","_assetsRedeemed","_escrowOutstanding","_totalRebateReceived","map","producerInfo","String","event","preventDefault","id","src","srcSet","alt","scope","Date","toLocaleDateString","providerInfo","Home","h3","StyledFundDiv0","StyledBackContainer","EProvider","escrowAssets","setEscrowAssets","actionStatus","setActionStatus","addNewSeller","collectedAssets","addProvider","send","from","err","res","once","alert","then","receipt","placeholder","onChange","e","target","value","split","item","isNumberArray","arrayItem","isNaN","filter","EscrowProvider","EProducer","newAssetPrice","setNewAssetPrice","newAssetName","setNewAssetName","escrowName","setEscrowName","escrowAmount","setEscrowAmount","assetPrice","setAssetPrice","assetType","setAssetType","createNewAssetType","_newAssetName","_postAssetPriceWei","addNewAssetType","createNewEscrow","postedAssets","assetTypeID","postAssetsCostWei","resultString","addNewProducer","defaultValue","name","selected","disabled","postAssetCostWei","Number","postAssetPriceWei","EscrowProducer","App","useDispatch","useSelector","settxStatus","transactionStatus","walletConnection","getData","useCallback","theme","path","exact","ReactDOM","render","StrictMode","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.22f3b7d0.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  fonts: {\r\n    heading: \"Inter\",\r\n    body: \"Inter\",\r\n  },\r\n});\r\n","import { ReactNode } from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\n\r\nimport styled from \"@emotion/styled\";\r\n\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default function Layout({ children }: Props) {\r\n  return (\r\n    <section>\r\n    <Flex\r\n      // flexDirection=\"column\"\r\n      // alignItems=\"center\"\r\n      // justifyContent=\"center\"\r\n      // h=\"100vh\"\r\n      width=\"80%\"\r\n      margin=\"auto\"\r\n      bg=\"white.800\"\r\n      display=\"block\"\r\n    >\r\n      {children}\r\n    </Flex>\r\n    </section>\r\n    \r\n  );\r\n}\r\n\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst StyledIdenticon = styled.div`\r\n  height: 1rem;\r\n  width: 1rem;\r\n  border-radius: 1.125rem;\r\n  background-color: black;\r\n`;\r\n\r\nexport default function Identicon() {\r\n  const ref = useRef<HTMLDivElement>();\r\n  const { account } = useEthers();\r\n\r\n  useEffect(() => {\r\n    if (account && ref.current) {\r\n      ref.current.innerHTML = \"\";\r\n      ref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)));\r\n    }\r\n  }, [account]);\r\n\r\n  return <StyledIdenticon ref={ref as any} />;\r\n}\r\n","import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\nimport { useEthers } from \"@usedapp/core\";\r\nimport Identicon from \"./Identicon\";\r\n\r\ntype Props = {\r\n  isOpen: any;\r\n  onClose: any;\r\n  txStatus: string;\r\n};\r\n\r\nexport default function AccountModal({ isOpen, onClose, txStatus }: Props) {\r\n  const { account, deactivate } = useEthers();\r\n\r\n  function handleDeactivateAccount() {\r\n    deactivate();\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        background=\"gray.900\"\r\n        border=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray.700\"\r\n        borderRadius=\"3xl\"\r\n      >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\r\n          Account\r\n        </ModalHeader>\r\n        <ModalCloseButton\r\n          color=\"white\"\r\n          fontSize=\"sm\"\r\n          _hover={{\r\n            color: \"whiteAlpha.700\",\r\n          }}\r\n        />\r\n        <ModalBody pt={0} px={4}>\r\n          <Box\r\n            borderRadius=\"3xl\"\r\n            border=\"1px\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.600\"\r\n            px={5}\r\n            pt={4}\r\n            pb={2}\r\n            mb={3}\r\n          >\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Text color=\"gray.400\" fontSize=\"sm\">\r\n                Connected with MetaMask\r\n              </Text>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                borderColor=\"blue.800\"\r\n                borderRadius=\"3xl\"\r\n                color=\"blue.500\"\r\n                fontSize=\"13px\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                height=\"26px\"\r\n                _hover={{\r\n                  background: \"none\",\r\n                  borderColor: \"blue.300\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n                onClick={handleDeactivateAccount}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Flex>\r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n              <Identicon />\r\n              <Text\r\n                color=\"white\"\r\n                fontSize=\"xl\"\r\n                fontWeight=\"semibold\"\r\n                ml=\"2\"\r\n                lineHeight=\"1.1\"\r\n              >\r\n                {account &&\r\n                  `${account.slice(0, 6)}...${account.slice(\r\n                    account.length - 4,\r\n                    account.length\r\n                  )}`}\r\n              </Text>\r\n            </Flex>\r\n            <Flex alignContent=\"center\" m={3}>\r\n              <Button\r\n                variant=\"link\"\r\n                color=\"gray.400\"\r\n                fontWeight=\"normal\"\r\n                fontSize=\"sm\"\r\n                _hover={{\r\n                  textDecoration: \"none\",\r\n                  color: \"whiteAlpha.800\",\r\n                }}\r\n              >\r\n                <CopyIcon mr={1} />\r\n                Copy Address\r\n              </Button>\r\n              <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://ropsten.etherscan.io/address/${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{\r\n                  color: \"whiteAlpha.800\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n              >\r\n                <ExternalLinkIcon mr={1} />\r\n                View on Explorer\r\n              </Link>\r\n            </Flex>\r\n          </Box>\r\n        </ModalBody>\r\n\r\n        <ModalFooter\r\n          justifyContent=\"end\"\r\n          background=\"gray.700\"\r\n          borderBottomLeftRadius=\"3xl\"\r\n          borderBottomRightRadius=\"3xl\"\r\n          p={6}\r\n        >\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"left\"\r\n            fontWeight=\"medium\"\r\n            fontSize=\"md\"\r\n            overflow=\"auto\"\r\n          >\r\n            {txStatus}\r\n          </Text>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n","const initialState = {\r\n    loading: false,\r\n    account: null,\r\n    smartContract: null,\r\n    activeProducers: null,\r\n    activeProviders: null,\r\n    contractOwnerAddress: null,\r\n    activeAssetTypes: null,\r\n    web3: null,\r\n    errorMsg: \"\",\r\n    isconnected: false,\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case \"CONNECTION_REQUEST\":\r\n            return {\r\n                ...initialState,\r\n                loading: true,\r\n                isconnected: false,\r\n            };\r\n        case \"CONNECTION_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                account: action.payload.account,\r\n                smartContract: action.payload.smartContract,\r\n                activeProducers: action.payload.activeProducers,\r\n                activeProviders: action.payload.activeProviders,\r\n                activeAssetTypes: action.payload.activeAssetTypes,\r\n                contractOwnerAddress: action.payload.contractOwnerAddress,\r\n                web3: action.payload.web3,\r\n                isconnected: true,\r\n\r\n            };\r\n        case \"CONNECTION_FAILED\":\r\n            return {\r\n                ...initialState,\r\n                loading: false,\r\n                errorMsg: action.payload,\r\n                isconnected: false,\r\n\r\n            };\r\n        case \"UPDATE_ACCOUNT\":\r\n            return {\r\n                ...state,\r\n                account: action.payload.account,\r\n                isconnected: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n    loading: false,\r\n    totalSupply: 0,\r\n    // cost: 0,\r\n    error: false,\r\n    errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action : any) => {\r\n    switch (action.type) {\r\n        case \"CHECK_DATA_REQUEST\":\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: false,\r\n                errorMsg: \"\",\r\n            };\r\n        case \"CHECK_DATA_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                totalSupply: action.payload.totalSupply,\r\n                // cost: action.payload.cost,\r\n                error: false,\r\n                errorMsg: \"\",\r\n            };\r\n        case \"CHECK_DATA_FAILED\":\r\n            return {\r\n                ...initialState,\r\n                loading: false,\r\n                error: true,\r\n                errorMsg: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    blockchain: blockchainReducer,\r\n    data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n    return createStore(rootReducer, composeEnhancers);\r\n};\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n    return {\r\n        type: \"CHECK_DATA_REQUEST\",\r\n    };\r\n};\r\n\r\nconst fetchDataSuccess = (payload: any) => {\r\n    return {\r\n        type: \"CHECK_DATA_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\n\r\nconst fetchDataFailed = (payload: any) => {\r\n    return {\r\n        type: \"CHECK_DATA_FAILED\",\r\n        payload,\r\n    };\r\n};\r\n\r\nfunction fetchData() {\r\n    console.log(\"fetchData1\");\r\n\r\n    return async (dispatch: any) => {\r\n        dispatch(fetchDataRequest());\r\n        try {\r\n            console.log(\"fetchData2\", store\r\n                .getState()\r\n                .blockchain.smartContract.methods);\r\n\r\n            const ActiveProducerArray = await store\r\n                .getState()\r\n                .blockchain.smartContract.methods.getProducerInfoArray()\r\n                .call();\r\n            console.log(\"fetchData3\", ActiveProducerArray);\r\n\r\n            dispatch(\r\n                fetchDataSuccess({\r\n                    ActiveProducerArray,\r\n                    // cost,\r\n                })\r\n            );\r\n        } catch (err) {\r\n            console.log(err);\r\n            dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default fetchData;","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// import { AbiItem } from 'web3-utils'\r\n// log\r\nimport fetchData from \"../data/dataActions\";\r\n\r\n\r\nconst connectRequest = () => {\r\n    return {\r\n        type: \"CONNECTION_REQUEST\",\r\n    };\r\n};\r\n\r\nconst connectSuccess = (payload: any) => {\r\n    return {\r\n        type: \"CONNECTION_SUCCESS\",\r\n        payload,\r\n    };\r\n};\r\n\r\nconst connectFailed = (payload: any) => {\r\n    return {\r\n        type: \"CONNECTION_FAILED\",\r\n        payload,\r\n    };\r\n};\r\n\r\nconst updateAccountRequest = (payload: any) => {\r\n    return {\r\n        type: \"UPDATE_ACCOUNT\",\r\n        payload,\r\n    };\r\n};\r\n\r\nexport const connect = () => {\r\n    return async (dispatch: any) => {\r\n        console.log(\"connect start\");\r\n\r\n        dispatch(connectRequest());\r\n        const abiResponse = await fetch(\"/config/abi.json\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        });\r\n        const abi = await abiResponse.json();\r\n        const configResponse = await fetch(\"/config/config.json\", {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/json\",\r\n            },\r\n        });\r\n\r\n        console.log(\"connect start\", configResponse);\r\n\r\n        const CONFIG = await configResponse.json();\r\n        const { ethereum } = window;\r\n        const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n\r\n        console.log(\"connect start metamask\", metamaskIsInstalled);\r\n\r\n        if (metamaskIsInstalled) {\r\n            const web3 = new Web3(ethereum);\r\n\r\n            console.log(\"connect start web3\", web3);\r\n\r\n            web3.setProvider(ethereum);\r\n\r\n            try {\r\n                const accounts = await ethereum.request({\r\n                    method: \"eth_requestAccounts\",\r\n                });\r\n\r\n                console.log(\"connect start accounts\", accounts);\r\n\r\n                const networkId = await ethereum.request({\r\n                    method: \"net_version\",\r\n                });\r\n\r\n\r\n                console.log(\"Network ID\", networkId);\r\n                console.log(\"Network ID config\", CONFIG.NETWORK.ID);\r\n\r\n                if (networkId.toString() === CONFIG.NETWORK.ID.toString()) {\r\n                    console.log(\"Network ID matched\");\r\n\r\n                    const SmartContractObj = new web3.eth.Contract(\r\n                        abi,\r\n                        CONFIG.CONTRACT_ADDRESS\r\n                    );\r\n\r\n                    console.log(\"connect start SmartContractObj\", SmartContractObj);\r\n\r\n                    const ActiveProducerArray = await SmartContractObj.methods.getProducerInfoArray().call();\r\n                    const ActiveProviderArray = await SmartContractObj.methods.getProviderInfoArray().call();\r\n                    const ActiveAssetTypesArray = await SmartContractObj.methods.getAssetsTypeArray().call();\r\n                    const contractOwnerAddress = await SmartContractObj.methods.owner().call();\r\n\r\n                    var producersTempArray = [];\r\n                    for (var _i = 0; _i < ActiveProducerArray.length; _i++) {\r\n                        producersTempArray.push(ActiveProducerArray[_i]);\r\n                    }\r\n                    var providersTempArray = [];\r\n                    for (var _i = 0; _i < ActiveProviderArray.length; _i++) {\r\n                        providersTempArray.push(ActiveProviderArray[_i]);\r\n                    }\r\n                    var assetTypesTempArray = [];\r\n                    for (var _i = 0; _i < ActiveAssetTypesArray.length; _i++) {\r\n                        assetTypesTempArray.push(ActiveAssetTypesArray[_i]);\r\n                    }\r\n\r\n                    console.log(\"active asset types : \", ActiveAssetTypesArray);\r\n\r\n                    dispatch(\r\n                        connectSuccess({\r\n                            account: accounts[0],\r\n                            smartContract: SmartContractObj,\r\n                            activeProducers: producersTempArray,\r\n                            activeProviders: providersTempArray,\r\n                            activeAssetTypes: assetTypesTempArray,\r\n                            contractOwnerAddress: contractOwnerAddress,\r\n                            web3,\r\n                        })\r\n                    );\r\n\r\n                    console.log(\"connect start account, \", accounts[0]);\r\n\r\n\r\n                    // Add listeners start\r\n                    ethereum.on(\"accountsChanged\", (accountsChanged: any) => {\r\n                        console.log(\"connect start updatedaccounts, \", accountsChanged);\r\n                        console.log(\"connect start updatedaccounts, \", accountsChanged[0]);\r\n\r\n                        dispatch(updateAccount(accountsChanged[0]));\r\n                    });\r\n                    ethereum.on(\"chainChanged\", () => {\r\n                        window.location.reload();\r\n                    });\r\n                    // Add listeners end\r\n                } else {\r\n                    dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n                }\r\n            } catch (err) {\r\n                dispatch(connectFailed(\"Something went wrong.\"));\r\n            }\r\n        } else {\r\n            dispatch(connectFailed(\"Install Metamask.\"));\r\n        }\r\n    };\r\n};\r\n\r\nexport const updateAccount = (account: any) => {\r\n    return async (dispatch: any) => {\r\n        console.log(\"Update account\");\r\n        dispatch(updateAccountRequest({ account }));\r\n        dispatch(fetchData());\r\n    };\r\n};\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import { useEthers, useEtherBalance } from \"@usedapp/core\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\n\r\ntype Props = {\r\n  handleOpenModal: any;\r\n  walletconnection: () => void;\r\n};\r\nconst ConnectButton: React.FC<Props> = ({ handleOpenModal,  walletconnection}) => {\r\n\r\n// export default function ConnectButton({ handleOpenModal,walletConnection }: Props) {\r\n  const { activateBrowserWallet, account } = useEthers();\r\n  const etherBalance = useEtherBalance(account);\r\n\r\n  function handleConnectWallet() {\r\n    activateBrowserWallet();\r\n    walletconnection();\r\n    // walletConnection\r\n  }\r\n\r\n  return account ? (\r\n    <>\r\n    <button type=\"button\" className=\"btn btn-primary mb-1\" onClick={handleOpenModal}>{account &&\r\n      `${account.slice(0, 6)}...${account.slice(\r\n        account.length - 4,\r\n        account.length\r\n      )}`}</button>\r\n\t\t<p className=\"mb-0 fs-6 fw-bold lh-1 text-muted\">Balance: {etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} ETH</p>\r\n    </>\r\n  ) : (\r\n    <button type=\"button\" onClick={handleConnectWallet} className=\"btn btn-primary mb-1\">Connect Wallet</button>\r\n  );\r\n}\r\n\r\nexport default ConnectButton\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory } from 'react-router-dom'\r\nimport AccountModal from \"../../../components/AccountModal\";\r\nimport { useDisclosure } from \"@chakra-ui/react\";\r\nimport ConnectButton from \"../../../components/ConnectButton\";\r\n\r\nconst StyledHeaderDiv0 = styled.div`\r\n\tmargin-bottom: 50px;\r\n\tpadding-top: 0px;\r\n    display: block;\r\n\tpadding: 0 50px;\r\n`;\r\nconst StyledSectionDiv0 = styled.section`\r\n    padding-top: 10px;\r\n`;\r\nconst StyledButton0 = styled.button`\r\n\tfont-size: 20px;\r\n\theight : 60px;\r\n\twidth : 200px;\r\n`;\r\nconst StyledButtonDivImage = styled.div`\r\n// top: 50%;\r\npadding: 10px;\r\n`;\r\nconst StyledButtonDiv0 = styled.div`\r\n// top: 50%;\r\npadding: 10px;\r\n`;\r\nconst StyledHeaderTitle = styled.h1`\r\n    font-size: 60px;\r\n`;\r\n\r\nconst StyledSmallTitle = styled.h4`\r\n    font-size : 22px;\r\n    padding-bottom: 30px;\r\n`;\r\n\r\nconst StyledContainerDiv = styled.div`\r\n    max-width: none;\r\n`;\r\nconst StyledContainerDiv0 = styled.div`\r\n    max-width: none;\r\n`;\r\n\r\nconst StyledProducerDiv1 = styled.div`\r\n    padding: 10px 0;\r\n`;\r\n\r\nconst StyledProducerDiv0 = styled.div`\r\n    text-align: center;\r\n    display: block;\r\n    margin-left: 10px;\r\n    font-size: 20px;\r\n    padding: 10px 10px;\r\n`;\r\n\r\nconst StyledProducerText0 = styled.h1`\r\n    padding-bottom : 5px;\r\n    font-size : 20px;\r\n`;\r\nconst StyledProducerText1 = styled.h1`\r\n    font-size : 18px;\r\n    padding-bottom: 30px;\r\n`;\r\nconst Styledtd = styled.td`\r\n    text-align: center; \r\n    vertical-align: middle;\r\n`;\r\n\r\nconst Styledth = styled.th`\r\n    text-align: center; \r\n    vertical-align: middle;\r\n`;\r\n\r\nconst StyledImg = styled.img`\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tdisplay: block;\r\n`;\r\nconst StyledHeaderDiv1 = styled.div`\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n`;\r\nconst StyledHeaderDiv3 = styled.div`\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n`;\r\nconst StyledHeaderDiv4 = styled.div`\r\nmargin-left: auto; \r\nmargin-right: 0;\r\n`;\r\nconst StyledHeaderTitle1 = styled.h1`\r\n    font-size: 65px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n`;\r\nconst StyledHeaderVerticalLine = styled.div`\r\nborder-left: 1px solid black;\r\n`;\r\nconst StyledHeaderDiv2 = styled.div`\r\n    display: block;\r\n    margin-left: 10px;\r\n    font-size: 27px;\r\n    padding: 10px 0;\r\n`;\r\nconst StyledHeaderTitle2 = styled.h1`\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n`;\r\n\r\ninterface Props {\r\n\t// escrowCount: number;\r\n\tescrowBlockchain: any;\r\n\taccount: any;\r\n\tactionEnabled: boolean;\r\n\twalletconnection: () => void;\t\r\n\tactiveProducerArray: any;\r\n\tactiveProviderArray: any;\t  \r\n\tactiveAssetTypesArray: any;\r\n\tsetTxStatus: (transactionStatus: string) => void;\t\r\n\ttxStatus: string;\r\n}\r\n\r\nconst ManagePage: React.FC<Props> = ({ escrowBlockchain, account,actionEnabled,walletconnection,activeProducerArray,activeProviderArray,activeAssetTypesArray, txStatus, setTxStatus}) => {\r\n\r\n    const { isOpen, onOpen, onClose } = useDisclosure();  \r\n\tconst [assetsFunded, setAssetsFunded] = useState('0');\r\n    const [assetsRedeemed, setAssetsRedeemed] = useState('0');\r\n    const [escrowOutstanding, setEscrowOutstanding] = useState('0');\r\n    const [totalRebateReceived, setTotalRebateReceived] = useState('0');\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst onProviderHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tevent.preventDefault();  \r\n\t\thistory.push(\"/provider\");\r\n\t}\r\n\tconst onProducerHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tevent.preventDefault(); \r\n\t\thistory.push(\"/producer\"); \r\n\t}\r\n\tconst onViewHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tevent.preventDefault(); \r\n\t\thistory.push(\"/view\"); \r\n\t}\r\n\tconst onFinanceHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tevent.preventDefault(); \r\n\t\thistory.push(\"/finance\"); \r\n\t}\r\n\r\n\r\n\tuseEffect(()=>{\r\n\r\n\t\tif(activeProducerArray){\r\n\t\t\tlet _assetsFunded: number = 0;\r\n\t\t\tlet _assetsRedeemed: number = 0;\r\n\t\t\tlet _escrowOutstanding: number = 0;\r\n\t\t\tlet _totalRebateReceived: number = 0;\r\n\r\n\t\t\tactiveProducerArray.map((producerInfo:any) => {\r\n\t\t\t\t// if(producerInfo['producer'] == account){\r\n\t\t\t\t\t_assetsFunded = _assetsFunded+(parseInt(producerInfo['quantity']))\r\n\t\t\t\t\t_assetsRedeemed = _assetsRedeemed + (parseInt(producerInfo['redeemedQuantity']))\r\n\t\t\t\t\t_escrowOutstanding = _escrowOutstanding + (parseInt(producerInfo['remainingAmount'])/1000000000000000000)\r\n\t\t\t\t\t_totalRebateReceived = _totalRebateReceived + (parseInt(producerInfo['redeemedAmount'])/1000000000000000000)\r\n\t\t\t\t// }                \r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tsetAssetsFunded(String(_assetsFunded.toFixed(0)));\r\n\t\t\tsetAssetsRedeemed(String(_assetsRedeemed.toFixed(0)));\r\n\t\t\tsetEscrowOutstanding(String(_escrowOutstanding.toFixed(5)));\r\n\t\t\tsetTotalRebateReceived(String(_totalRebateReceived.toFixed(5)));\r\n\t\t}else {\r\n\t\t\tsetAssetsFunded(\"0\");\r\n\t\t\tsetAssetsRedeemed(\"0\");\r\n\t\t\tsetEscrowOutstanding(\"0\");\r\n\t\t\tsetTotalRebateReceived(\"0\");\r\n\t\t}      \r\n\r\n    }, [activeProviderArray,account,activeProducerArray])\r\n  return (\r\n\t\t<section>\r\n\t\t<div className=\"section__header pt-3\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>                    \r\n\t\t\t\t\t<div className=\"col col-lg-2 d-flex justify-content-end\">\r\n\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t<ConnectButton handleOpenModal={onOpen} walletconnection={walletconnection}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<StyledHeaderDiv0>\r\n\t\t\t\t\t\t<StyledHeaderDiv1>\r\n\t\t\t\t\t\t\t<StyledHeaderTitle1 className=\"mb-0\">03</StyledHeaderTitle1>\r\n\t\t\t\t\t\t\t<StyledHeaderVerticalLine />\r\n\t\t\t\t\t\t\t<StyledHeaderDiv2>\r\n\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">(re)view</h1>\r\n\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">Analytics and oversight of complete platform</h1>\r\n\t\t\t\t\t\t\t</StyledHeaderDiv2>\r\n\t\t\t\t\t\t</StyledHeaderDiv1>\r\n\t\t\t\t\t\t<StyledHeaderDiv3>\r\n\t\t\t\t\t\t\t<StyledHeaderTitle2 className=\"mb-0\">Reviewer Address : {account}</StyledHeaderTitle2>\r\n\r\n\t\t\t\t\t\t\t<StyledHeaderDiv4 >\t\r\n\t\t\t\t\t\t\t\t<StyledButtonDiv0 className=\"col text-right\">\r\n\t\t\t\t\t\t\t\t\t<StyledButton0 type=\"button\" className=\"btn btn-primary mb-1\" onClick={onProducerHandler}>01 | (re)fund</StyledButton0>\r\n\t\t\t\t\t\t\t\t</StyledButtonDiv0>            \t\t\t\r\n\t\t\t\t\t\t\t\t<StyledButtonDiv0 className=\"col text-right\">\r\n\t\t\t\t\t\t\t\t\t<StyledButton0 type=\"button\" className=\"btn btn-primary mb-1\" onClick={onProviderHandler}>02 | (re)deem</StyledButton0>\r\n\t\t\t\t\t\t\t\t</StyledButtonDiv0>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</StyledHeaderDiv4>\r\n\t\t\t\t\t\t</StyledHeaderDiv3>\r\n\t\t\t\t\t</StyledHeaderDiv0>\r\n\t\t\t\t</div>\r\n\t\t\t\t{/* <div className=\"col col-lg-2 d-flex justify-content-end\">\r\n\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t<ConnectButton handleOpenModal={onOpen} walletconnection={walletconnection} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> */}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<StyledSectionDiv0 id=\"section\" className=\"section\">\r\n\t\t\t\t{/* <StyledHeaderDiv0>\r\n\t\t\t\t\t<StyledHeaderTitle className=\"mb-0\">Escrow Project</StyledHeaderTitle>\r\n\t\t\t\t</StyledHeaderDiv0> */}\r\n\t\t<StyledHeaderDiv0>\r\n\t\t{/* <div className=\"row\">\t\r\n\t\t\t<StyledButtonDiv0 className=\"col text-center\">\r\n\t\t\t\t<StyledButton0 type=\"button\" className=\"btn btn-primary mb-1\" onClick={onProducerHandler}>01 | (re)fund</StyledButton0>\r\n\t\t\t</StyledButtonDiv0>            \t\t\t\r\n\t\t\t<StyledButtonDiv0 className=\"col text-center\">\r\n\t\t\t\t<StyledButton0 type=\"button\" className=\"btn btn-primary mb-1\" onClick={onProviderHandler}>02 | (re)deem</StyledButton0>\r\n\t\t\t</StyledButtonDiv0>\t\r\n\t\t</div> */}\r\n\t\t\t\t\r\n\t\t<StyledContainerDiv0 className=\"container pt-5 pb-5\">\r\n\t\t\t<div className=\"row\">\t            \t\t\t\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<StyledProducerDiv1 className=\"row\">\t\r\n\t\t\t\t\t\t<div className=\"col-xs-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{assetsFunded}</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">units</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Total Assets Funded</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"col-xs-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{assetsRedeemed}</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">units</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Total Assets Redeemed</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"col-xs-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{escrowOutstanding}</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">ETH</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Escrow Balance</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\r\n\t\t\t\t\t\t<div className=\"col-xs-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{totalRebateReceived}</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">ETH</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Escrow Disbursed</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t</div>\t\r\n\t\t\t\t\t</StyledProducerDiv1>\t\t\r\n\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</StyledContainerDiv0>\r\n\t\t<div className=\"row\">\t\r\n\t\t\t<StyledButtonDivImage className=\"col text-center\">\r\n\t\t\t<StyledImg src=\"img/whitepaper.png\" srcSet=\"img/whitepaper.png\" alt=\"\" />\r\n\t\t\t</StyledButtonDivImage>  \r\n\t\t</div>\r\n\t\t<hr/>\r\n\t\t<StyledContainerDiv className=\"container pt-5 pb-5\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<StyledSmallTitle className=\"mb-4\" >List of Funds(All)</StyledSmallTitle>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<table className=\"table table-striped\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">ID</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Name</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Address</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Date</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY Redeemed</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY Remaining</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Amount</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Redeemed</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Rebate Received</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Remaininng</Styledth>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{ activeProducerArray ? \r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{activeProducerArray.map((producerInfo:any) => (\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{producerInfo['escrowID']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{producerInfo['escrowName']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{producerInfo['producer']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{new Date(1000*parseInt(producerInfo['createdDate'])).toLocaleDateString(\"en-US\")}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{producerInfo['quantity']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{producerInfo['redeemedQuantity']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{parseInt(producerInfo['quantity']) - parseInt(producerInfo['redeemedQuantity'])}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{String(parseInt(producerInfo['amount'])/1000000000000000000)} ETH</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{String(parseInt(producerInfo['redeemedAmount'])/1000000000000000000)} ETH</Styledtd>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{String(parseInt(producerInfo['rebateReceivedAmount'])/1000000000000000000)} ETH</Styledtd>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{String(parseInt(producerInfo['remainingAmount'])/1000000000000000000)} ETH</Styledtd>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</StyledContainerDiv>\r\n\t\t<StyledContainerDiv className=\"container pt-5 pb-5\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<StyledSmallTitle className=\"mb-4\" >List of Redemptions(All)</StyledSmallTitle>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<table className=\"table table-striped\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Date</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">ID</Styledth>\r\n\t\t\t\t\t\t\t{/* <Styledth scope=\"col\">Escrow ID</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Escrow Name</Styledth> */}\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Producer</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Provider</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Redeemed Amount</Styledth>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{ activeProviderArray ? \r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t{activeProviderArray.map((providerInfo:any) => (\r\n\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{new Date(1000*parseInt(providerInfo['createdDate'])).toLocaleDateString(\"en-US\")}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['providerID']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <Styledtd scope=\"row\">{providerInfo['escrowID']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['escrowName']}</Styledtd> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['producer']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['provider']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['quantity']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{String(parseInt(providerInfo['redeemedAmount'])/1000000000000000000)} ETH</Styledtd>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</StyledContainerDiv>\r\n\r\n\t\t\t\t\r\n\r\n\t\t\t\t\r\n\t\t\t\t\t{/* <button type=\"button\" className=\"btn btn-primary mb-1\" onClick={onProviderHandler}>Provider</button>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary mb-1\" onClick={onProducerHandler}>Producer</button> */}\r\n\t\t\t\t</StyledHeaderDiv0>\t\t\r\n\t\t\t</StyledSectionDiv0>\r\n\t\t\t<AccountModal isOpen={isOpen} onClose={onClose}  txStatus={txStatus}/>\r\n\r\n\t\t</section>\r\n    \r\n  )\r\n}\r\n\r\n\r\nexport default ManagePage\r\n","import React from 'react'\r\n\r\nimport ManagePage from './components/ManagePage';\r\n\r\ninterface Props {\r\n  // escrowCount: number;\r\n  escrowBlockchain: any;\r\n  account: any;\r\n  actionEnabled: boolean;\r\n  walletconnection: () => void;\t\r\n\tactiveProducerArray: any;\r\n\tactiveProviderArray: any;\r\n\tactiveAssetTypesArray: any;\r\n  setTxStatus: (transactionStatus: string) => void;\t\r\n\ttxStatus: string;\r\n}\r\n\r\nconst Home: React.FC<Props> = ({ escrowBlockchain, account,actionEnabled,walletconnection,activeProducerArray,activeProviderArray,activeAssetTypesArray, txStatus,setTxStatus}) => {\r\n  // const Home = () => {\r\n  return (\r\n    <>\r\n      <main className=\"main main--start p-home\">\r\n        <ManagePage escrowBlockchain={escrowBlockchain} account={account} actionEnabled={actionEnabled} walletconnection={walletconnection} activeProducerArray={activeProducerArray} activeProviderArray={activeProviderArray} activeAssetTypesArray={activeAssetTypesArray} txStatus={txStatus}  setTxStatus={setTxStatus}/>        \r\n      </main>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { KeyboardEvent, ChangeEvent, useEffect, useState, FormEventHandler } from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport { useHistory, useLocation, Link } from 'react-router-dom'\r\n\r\nimport AccountModal from \"../../../components/AccountModal\";\r\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\r\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\r\nimport ConnectButton from \"../../../components/ConnectButton\";\r\n\r\nconst StyledTittle = styled.h3`\r\n    margin: 50px;\r\n`;\r\n\r\n\r\nconst StyledHeaderDiv0 = styled.div`\r\n    display: block;\r\n`;\r\nconst StyledHeaderDiv1 = styled.div`\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n`;\r\nconst StyledHeaderTitle1 = styled.h1`\r\n    font-size: 65px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n`;\r\nconst StyledHeaderTitle2 = styled.h1`\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n`;\r\nconst StyledHeaderVerticalLine = styled.div`\r\nborder-left: 1px solid black;\r\n`;\r\nconst StyledHeaderDiv2 = styled.div`\r\n    display: block;\r\n    margin-left: 10px;\r\n    font-size: 27px;\r\n    padding: 10px 0;\r\n`;\r\nconst StyledProducerDiv0 = styled.div`\r\n    text-align: center;\r\n    display: block;\r\n    margin-left: 10px;\r\n    font-size: 20px;\r\n    padding: 10px 10px;\r\n`;\r\nconst StyledProducerDiv1 = styled.div`\r\n    padding: 20px 0;\r\n`;\r\nconst StyledProducerText0 = styled.h1`\r\n    padding-bottom : 5px;\r\n    font-size : 20px;\r\n`;\r\nconst StyledProducerText1 = styled.h1`\r\n    font-size : 18px;\r\n    padding-bottom: 30px;\r\n`;\r\nconst StyledSmallTitle = styled.h4`\r\n    font-size : 22px;\r\n    padding-bottom: 30px;\r\n`;\r\n\r\nconst StyledFundDiv0 = styled.div`\r\n    background-color: #E7E9EB;\r\n    padding: 15px 15px;\r\n`;\r\nconst StyledContainerDiv = styled.div`\r\n    max-width: none;\r\n`;\r\nconst StyledBackContainer = styled.div`\r\n\tpadding-top : 30px;\r\n\tpadding-bottom: 30px;\r\n`;\r\nconst Styledtd = styled.td`\r\n    text-align: center; \r\n    vertical-align: middle;\r\n`;\r\nconst Styledth = styled.th`\r\n    text-align: center; \r\n    vertical-align: middle;\r\n`;\r\n\r\nconst StyledButtonDiv0 = styled.div`\r\n\ttop: 50%;\r\n\tpadding: 10px;\r\n`;\r\nconst StyledImg = styled.img`\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tdisplay: block;\r\n`;\r\n\r\n\r\ninterface Props {\r\n\tescrowBlockchain: any;\r\n\taccount: any;\r\n\tactionEnabled: boolean;\r\n\twalletconnection: () => void;\r\n\tactiveProducerArray: any;\r\n\tactiveProviderArray: any;\t\r\n\tactiveAssetTypesArray: any;\r\n\tsetTxStatus: (transactionStatus: string) => void;\t\r\n\ttxStatus: string;\r\n}\r\nconst EProvider: React.FC<Props> = ({ escrowBlockchain, account, actionEnabled, walletconnection, activeProducerArray, activeProviderArray,activeAssetTypesArray, txStatus, setTxStatus}) => {\r\n\r\n\tconst { isOpen, onOpen, onClose } = useDisclosure();\r\n\t// const escrowIDArray = [1,2,3,4,5,6,7,8,9,0]; \r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst [escrowName, setEscrowName] = useState('');\r\n\tconst [escrowID, setEscrowID] = useState('');\r\n\tconst [escrowAssets, setEscrowAssets] = useState('');\r\n\tconst [actionStatus, setActionStatus] = useState('');\r\n\tconst [assetsFunded, setAssetsFunded] = useState('0');\r\n\tconst [assetsRedeemed, setAssetsRedeemed] = useState('0');\r\n\tconst [escrowOutstanding, setEscrowOutstanding] = useState('0');\r\n\tconst [totalRebateReceived, setTotalRebateReceived] = useState('0');\r\n\r\n\tconst onEscrowName = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetEscrowName(e.target.value);\r\n\t}\r\n\r\n\tconst onEscrowID = (e: ChangeEvent<HTMLSelectElement>): void => {\r\n\t\tsetEscrowID(String(Number(e.target.value) - 0));\r\n\t}\r\n\tconst onColledtedAssets = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetEscrowAssets(e.target.value);\r\n\t}\r\n\r\n\tconst addNewSellerHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\r\n\r\n\t\tevent.preventDefault();\r\n\t\tif (account) {\r\n\r\n\t\t\tif (actionEnabled) {\r\n\t\t\t\tvar collectedAssets: Array<number> = escrowAssets.split(',').map(function (item) {\r\n\t\t\t\t\treturn parseInt(item, 10);\r\n\t\t\t\t});\r\n\r\n\r\n\t\t\t\tlet isNumberArray: boolean = true;\r\n\r\n\t\t\t\tfor (let arrayItem of collectedAssets) {\r\n\t\t\t\t\tconsole.log(\"assets\", arrayItem);\r\n\t\t\t\t\tif (isNaN(arrayItem)) {\r\n\t\t\t\t\t\tisNumberArray = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (isNumberArray) {\r\n\t\t\t\t\t// if (escrowID === \"\") {\r\n\t\t\t\t\t// \talert(\"Please select Escrow ID.\");\r\n\t\t\t\t\t// } else {\r\n\t\t\t\t\t\tif (collectedAssets) {\r\n\t\t\t\t\t\t\taddNewSeller(collectedAssets);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\talert(\"Please input assets by comma separated.\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"Please input valid numbers as assets\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\talert(\"Please connect wallet.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\twalletconnection();\r\n\t\t}\r\n\r\n\t};\r\n\t\t\r\n\t\r\n\t// const addNewSeller = (escrowID: string, collectedAssets: Array<Number>) => {\r\n\r\n\t// \tsetActionStatus(\"Collecting Assets....\");\r\n\r\n\t// \tescrowBlockchain.smartContract.methods.addProvider(escrowID, collectedAssets)\r\n\t// \t\t.send({ from: account },function (err:any, res:any) {\r\n\t// \t\t\tif (err) {\r\n\t// \t\t\t  console.log(\"An error occured\", err)\r\n\t// \t\t\t  return\r\n\t// \t\t\t}\r\n\t// \t\t\tconsole.log(\"Hash of the transaction: \" + res)\r\n\t// \t\t\tsetActionStatus(\"Collecting Assets.... txHash:\"+res);\r\n\t// \t\t\tsetTxStatus(\"Collecting Assets - txHash: \"+res);\r\n\r\n\r\n\t// \t\t\t// add feature to fetch data from transaction hash\r\n\t\t\t\t\r\n\t// \t\t  })\r\n\t// \t\t.once(\"error\", (err: any) => {\r\n\t// \t\t\tconsole.log(err);\r\n\t// \t\t\tconsole.log(\"Sorry, something went wrong please try again later.\");\r\n\t// \t\t\talert(\"Sorry, something went wrong please try again later.\");\r\n\t// \t\t\twalletconnection();\r\n\t// \t\t\tsetActionStatus(\"\");\r\n\t// \t\t\tsetTxStatus(\"Your transactions willl appear here...\");\r\n\t// \t\t})\r\n\t// \t\t.then((receipt: any) => {\r\n\t// \t\t\tconsole.log(\"Response : \", receipt);\r\n\t// \t\t\tconsole.log(\"Transaction finished.\");\r\n\t// \t\t\talert(\"Transaction finished.\");\r\n\t// \t\t\twalletconnection();\r\n\t// \t\t\tsetActionStatus(\"\");\r\n\t// \t\t\tsetTxStatus(\"Your transactions willl appear here...\");\r\n\r\n\t// \t});\r\n\t// }\r\n\tconst addNewSeller = (collectedAssets: Array<Number>) => {\r\n\r\n\t\tsetActionStatus(\"Collecting Assets....\");\r\n\r\n\t\tescrowBlockchain.smartContract.methods.addProvider(collectedAssets)\r\n\t\t\t.send({ from: account },function (err:any, res:any) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t  console.log(\"An error occured\", err)\r\n\t\t\t\t  return\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Hash of the transaction: \" + res)\r\n\t\t\t\tsetActionStatus(\"Collecting Assets.... txHash:\"+res);\r\n\t\t\t\tsetTxStatus(\"Collecting Assets - txHash: \"+res);\r\n\r\n\r\n\t\t\t\t// add feature to fetch data from transaction hash\r\n\t\t\t\t\r\n\t\t\t  })\r\n\t\t\t.once(\"error\", (err: any) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tconsole.log(\"Sorry, something went wrong please try again later.\");\r\n\t\t\t\talert(\"Sorry, something went wrong please try again later.\");\r\n\t\t\t\twalletconnection();\r\n\t\t\t\tsetActionStatus(\"\");\r\n\t\t\t\tsetTxStatus(\"Your transactions willl appear here...\");\r\n\t\t\t})\r\n\t\t\t.then((receipt: any) => {\r\n\t\t\t\tconsole.log(\"Response : \", receipt);\r\n\t\t\t\tconsole.log(\"Transaction finished.\");\r\n\t\t\t\talert(\"Transaction finished.\");\r\n\t\t\t\twalletconnection();\r\n\t\t\t\tsetActionStatus(\"\");\r\n\t\t\t\tsetTxStatus(\"Your transactions willl appear here...\");\r\n\t\t});\r\n\r\n\t\t// escrowBlockchain.smartContract.methods.addProvider(escrowID, collectedAssets)\r\n\t\t\t// .send({ from: account }, function (err:any, res:any) {\r\n\t\t\t// \tif (err) {\r\n\t\t\t// \t  console.log(\"An error occured\", err)\r\n\t\t\t// \t  return\r\n\t\t\t// \t}\r\n\t\t\t// \tconsole.log(\"Hash of the transaction: \" + res)\r\n\t\t\t// \tsetActionStatus(\"Collecting Assets.... txHash:\"+res);\r\n\t\t\t// \tsetTxStatus(\"Collecting Assets - txHash: \"+res);\r\n\t\t\t//   })\r\n\t\t\t// .on('error', function(error: any){ \r\n\t\t\t// \tconsole.log(error);\r\n\t\t\t// \tconsole.log(\"Sorry, something went wrong please try again later.\");\r\n\t\t\t// \talert(\"Sorry, something went wrong please try again later.\");\r\n\t\t\t// \twalletconnection();\r\n\t\t\t// \tsetActionStatus(\"\");\r\n\t\t\t// \tsetTxStatus(\"Your transactions willl appear here...\");\r\n\t\t\t// \tconsole.log(\"testing on : error : \",error) \r\n\t\t\t// })\r\n\t\t\t// .on('transactionHash', function(transactionHash: any){ console.log(\"testing on : transactionHash : \",transactionHash) })\r\n\t\t\t// .on('receipt', function(receipt: any){\r\n\t\t\t//    console.log(receipt.contractAddress) // contains the new contract address\r\n\t\t\t// })\r\n\t\t\t// .on('confirmation', function(confirmationNumber: any, receipt: any){ \r\n\t\t\t// \tconsole.log(\"testing on : confirmationNumber : \",confirmationNumber); \r\n\t\t\t// \tconsole.log(\"testing on : receipt : \",receipt); \r\n\t\t\t//  })\r\n\t\t\t// .then((receipt: any) => {\r\n\t\t\t// \tconsole.log(\"Response : \", receipt);\r\n\t\t\t// \tconsole.log(\"Transaction finished.\");\r\n\t\t\t// \talert(\"Transaction finished.\");\r\n\t\t\t// \twalletconnection();\r\n\t\t\t// \tsetActionStatus(\"\");\r\n\t\t\t// \tsetTxStatus(\"Your transactions willl appear here...\");\r\n\t\t\t// });\r\n\t}\r\n\tconst onBackHomeHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tevent.preventDefault();\r\n\t\thistory.push(\"/\");\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tif (activeProducerArray) {\r\n\t\t\tlet _assetsFunded: number = 0;\r\n\t\t\tlet _assetsRedeemed: number = 0;\r\n\t\t\tlet _escrowOutstanding: number = 0;\r\n\t\t\tlet _totalRebateReceived: number = 0;\r\n\r\n\t\t\t// activeProducerArray.map((producerInfo: any) => {\r\n\r\n\t\t\t// \tif (producerInfo['producer'] == account) {\r\n\t\t\t// \t\t_assetsFunded = _assetsFunded + (parseInt(producerInfo['quantity']))\r\n\t\t\t// \t\t_assetsRedeemed = _assetsRedeemed + (parseInt(producerInfo['redeemedQuantity']))\r\n\t\t\t// \t\t_escrowOutstanding = _escrowOutstanding + (parseInt(producerInfo['remainingAmount']) / 1000000000000000000)\r\n\t\t\t// \t}\r\n\t\t\t// });\r\n\r\n\t\t\tactiveProviderArray.map((providerInfo: any) => {\r\n\r\n\t\t\t\tif (providerInfo['provider'] == account) {\r\n\t\t\t\t\t_assetsRedeemed = _assetsRedeemed + (parseInt(providerInfo['quantity']))\r\n\t\t\t\t\t_totalRebateReceived = _totalRebateReceived + (parseInt(providerInfo['redeemedAmount']) / 1000000000000000000)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetAssetsFunded(String(_assetsFunded.toFixed(0)));\r\n\t\t\tsetAssetsRedeemed(String(_assetsRedeemed.toFixed(0)));\r\n\t\t\tsetEscrowOutstanding(String(_escrowOutstanding.toFixed(5)));\r\n\t\t\tsetTotalRebateReceived(String(_totalRebateReceived.toFixed(5)));\r\n\t\t} else {\r\n\t\t\tsetAssetsFunded(\"0\");\r\n\t\t\tsetAssetsRedeemed(\"0\");\r\n\t\t\tsetEscrowOutstanding(\"0\");\r\n\t\t\tsetTotalRebateReceived(\"0\");\r\n\t\t}\r\n\r\n\t}, [activeProviderArray, account, activeProducerArray])\r\n\r\n\treturn (\r\n\r\n\t\t<section id=\"section\" className=\"section\">\r\n\r\n\t\t\t<div className=\"section__header pt-3\">\r\n\t\t\t\t<StyledBackContainer>\r\n\t\t\t\t\t<button type=\"button\" onClick={onBackHomeHandler} className=\"btn btn-primary mb-1\">Home</button>\r\n\t\t\t\t</StyledBackContainer>\r\n\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t<StyledHeaderDiv0>\r\n\t\t\t\t\t\t\t\t<StyledHeaderDiv1>\r\n\t\t\t\t\t\t\t\t\t<StyledHeaderTitle1 className=\"mb-0\">02</StyledHeaderTitle1>\r\n\t\t\t\t\t\t\t\t\t<StyledHeaderVerticalLine />\r\n\t\t\t\t\t\t\t\t\t<StyledHeaderDiv2>\r\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">(re)deem</h1>\r\n\t\t\t\t\t\t\t\t\t\t<h1 className=\"mb-0\">Submitting collected assets for redemption</h1>\r\n\t\t\t\t\t\t\t\t\t</StyledHeaderDiv2>\r\n\t\t\t\t\t\t\t\t</StyledHeaderDiv1>\r\n\t\t\t\t\t\t\t\t<StyledHeaderTitle2 className=\"mb-0\">Provider Address : {account}</StyledHeaderTitle2>\r\n\t\t\t\t\t\t\t</StyledHeaderDiv0>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col col-lg-2 d-flex justify-content-end\">\r\n\t\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<ConnectButton handleOpenModal={onOpen} walletconnection={walletconnection} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t\t<StyledContainerDiv className=\"container pt-5 pb-5\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-xs-12 col-md-8\">\r\n\t\t\t\t\t\t<StyledProducerDiv1 className=\"row\">\r\n\t\t\t\t\t\t\t{/* <div className=\"col-xs-6 col-sm-5\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{assetsFunded}</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\"></StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Assets Funded</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t<div className=\"col-xs-6 col-sm-5\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{assetsRedeemed}</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\"></StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Assets Redeemed</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{/* <div className=\"col-xs-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{escrowOutstanding}</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">ETH</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Escrow Outstanding</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t<div className=\"col-xs-6 col-sm-3\">\r\n\t\t\t\t\t\t\t\t<StyledProducerDiv0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText0 className=\"mb-0\">{totalRebateReceived} ETH</StyledProducerText0>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\"></StyledProducerText1>\r\n\t\t\t\t\t\t\t\t\t<StyledProducerText1 className=\"mb-0\">Total Rebate Received</StyledProducerText1>\r\n\t\t\t\t\t\t\t\t</StyledProducerDiv0>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</StyledProducerDiv1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<StyledFundDiv0 className=\"col-xs-6 col-md-4\">\r\n\t\t\t\t\t\t<StyledSmallTitle className=\"mb-4\">Redeem Assets</StyledSmallTitle>\r\n\r\n\t\t\t\t\t\t<form action=\"\">\r\n\t\t\t\t\t\t\t{/* <div>\r\n\t\t\t\t\t\t\t\t<label className=\"w-100 mb-3\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"form-label\">Escrow:</span>\r\n\t\t\t\t\t\t\t\t\t<select name=\"\" className=\"form-control\" onChange={onEscrowID}>\r\n\t\t\t\t\t\t\t\t\t\t<option value=\"0\" selected disabled>Select Escrow</option>\r\n\t\t\t\t\t\t\t\t\t\t{activeProducerArray ?\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{activeProducerArray.map((producerInfo:any) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value={producerInfo['escrowID']}>{producerInfo['escrowID']} - {producerInfo['escrowName']}</option>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<label className=\"w-100 mb-3\">\r\n\t\t\t\t\t\t\t\t\t<span className=\"form-label\">Collected Assets(limit : 10)</span>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"1,2,3,4,5,6.7.8.9.0\" className=\"form-control\" onChange={onColledtedAssets} value={escrowAssets} />\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t<div className=\"text-center pb-2\">\r\n\t\t\t\t\t\t\t\t<button type=\"submit\" onClick={addNewSellerHandler} className=\"btn btn-primary w-100\">Collect Assets</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p className=\"text-center text-muted\">{actionStatus}</p>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</StyledFundDiv0>\r\n\t\t\t\t</div>\r\n\t\t\t</StyledContainerDiv>\r\n\t\t\t{/* <div className=\"row\">\t\r\n\t\t\t\t<StyledButtonDiv0 className=\"col text-center\">\r\n\t\t\t\t\t<StyledImg src=\"img/whitepaper.png\" srcSet=\"img/whitepaper.png\" alt=\"\" />\r\n\t\t\t\t</StyledButtonDiv0>  \r\n            </div> */}\r\n\t\t\t<hr />\r\n\t\t\t<StyledContainerDiv className=\"container pt-5 pb-5\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n\r\n\t\t\t\t\t\t<StyledSmallTitle className=\"mb-4\" >List of Redemptions</StyledSmallTitle>\r\n\r\n\t\t\t\t\t\t<table className=\"table table-striped\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<Styledth scope=\"col\">Date</Styledth>\r\n\t\t\t\t\t\t\t\t\t<Styledth scope=\"col\">ID</Styledth>\r\n\t\t\t\t\t\t\t\t\t{/* <Styledth scope=\"col\">Escrow ID</Styledth>\r\n\t\t\t\t\t\t\t\t\t<Styledth scope=\"col\">Escrow Name</Styledth> */}\r\n\t\t\t\t\t\t\t\t\t<Styledth scope=\"col\">Producer</Styledth>\r\n\t\t\t\t\t\t\t\t\t{/* <Styledth scope=\"col\">Provider</Styledth> */}\r\n\t\t\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY</Styledth>\r\n\t\t\t\t\t\t\t\t\t<Styledth scope=\"col\">Redeemed Amount</Styledth>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{activeProviderArray ?\r\n\t\t\t\t\t\t\t\t\t<>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{activeProviderArray.filter((providerInfo: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn providerInfo['provider'] == account\r\n\t\t\t\t\t\t\t\t\t\t\t\t}).map((providerInfo:any) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{new Date(1000 * parseInt(providerInfo['createdDate'])).toLocaleDateString(\"en-US\")}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['providerID']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <Styledtd scope=\"row\">{providerInfo['escrowID']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['escrowName']}</Styledtd> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['producer']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{/* <Styledtd scope=\"row\">{providerInfo['provider']}</Styledtd> */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{providerInfo['quantity']}</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Styledtd scope=\"row\">{String(parseInt(providerInfo['redeemedAmount']) / 1000000000000000000)} ETH</Styledtd>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{/* {activeProviderArray.map((providerInfo: any) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{providerInfo['providerID']}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{providerInfo['escrowID']}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{providerInfo['escrowName']}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{providerInfo['producer']}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{providerInfo['provider']}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{new Date(1000 * parseInt(providerInfo['createdDate'])).toLocaleDateString(\"en-US\")}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{providerInfo['quantity']}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<td scope=\"row\">{String(parseInt(providerInfo['redeemedAmount']) / 1000000000000000000)} ETH</td>\r\n\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t))} */}\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{/* {escrowIDArray.map((selectedescrowID,index) => (\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td scope=\"row\">{selectedescrowID}</td>\r\n\t\t\t\t\t\t\t\t<td>{escrowNameArray[index]}</td>\r\n\t\t\t\t\t\t\t\t<td className=\"text-break\">{escrowAddressArray[index]}</td>\r\n\t\t\t\t\t\t\t\t<td>Mar 22 2022</td>\r\n\t\t\t\t\t\t\t\t<td>10</td>\r\n\t\t\t\t\t\t\t\t<td>1 ETH</td>\r\n\t\t\t\t\t\t\t\t<td>0.3 ETH</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\t\t\t\t\t\t */}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</StyledContainerDiv>\r\n\t\t\t<AccountModal isOpen={isOpen} onClose={onClose} txStatus={txStatus}/>\r\n\t\t</section>\r\n\r\n\t)\r\n}\r\n\r\n\r\nexport default EProvider\r\n","import React from 'react'\r\n\r\nimport EProvider from './components/EProvider';\r\n\r\ninterface Props {\r\n  // escrowCount: number;\r\n  escrowBlockchain: any;\r\n  account: any;\r\n  actionEnabled: boolean;\r\n  walletconnection: () => void;\t\r\n\tactiveProducerArray: any;\r\n\tactiveProviderArray: any;\r\n  activeAssetTypesArray: any;\r\n  setTxStatus: (transactionStatus: string) => void;\t\r\n\ttxStatus: string;\r\n}\r\n\r\nconst EscrowProvider: React.FC<Props> = ({ escrowBlockchain, account,actionEnabled,walletconnection,activeProducerArray,activeProviderArray,activeAssetTypesArray,txStatus,setTxStatus}) => {\r\n  return (\r\n    <>\r\n      {/* <main className=\"main main--start p-home\"> */}\r\n        <EProvider escrowBlockchain={escrowBlockchain} account={account} actionEnabled={actionEnabled} walletconnection={walletconnection} activeProducerArray={activeProducerArray} activeProviderArray={activeProviderArray} activeAssetTypesArray={activeAssetTypesArray} txStatus={txStatus} setTxStatus={setTxStatus}/>        \r\n      {/* </main> */}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EscrowProvider\r\n","import React, {KeyboardEvent,ChangeEvent,useEffect ,useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport { useHistory, useLocation, Link } from 'react-router-dom'\r\n\r\nimport AccountModal from \"../../../components/AccountModal\";\r\nimport { useEthers, useEtherBalance } from \"@usedapp/core\";\r\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\r\nimport ConnectButton from \"../../../components/ConnectButton\";\r\n\r\n\r\nconst StyledTittle = styled.h3`\r\n    margin: 50px;\r\n`;\r\n\r\n\r\nconst StyledHeaderDiv0 = styled.div`\r\n    display: block;\r\n`;\r\nconst StyledHeaderDiv1 = styled.div`\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n`;\r\nconst StyledHeaderTitle1 = styled.h1`\r\n    font-size: 65px;\r\n    margin-right: 10px;\r\n    margin-left: 10px;\r\n`;\r\nconst StyledHeaderTitle2 = styled.h1`\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n`;\r\nconst StyledHeaderVerticalLine = styled.div`\r\nborder-left: 1px solid black;\r\n`;\r\nconst StyledHeaderDiv2 = styled.div`\r\n    display: block;\r\n    margin-left: 10px;\r\n    font-size: 27px;\r\n    padding: 10px 0;\r\n`;\r\nconst StyledProducerDiv0 = styled.div`\r\n    text-align: center;\r\n    display: block;\r\n    margin-left: 10px;\r\n    font-size: 20px;\r\n    padding: 10px 10px;\r\n`;\r\nconst StyledProducerDiv1 = styled.div`\r\n    padding: 100px 0;\r\n`;\r\nconst StyledProducerText0 = styled.h1`\r\n    padding-bottom : 5px;\r\n    font-size : 20px;\r\n`;\r\nconst StyledProducerText1 = styled.h1`\r\n    font-size : 18px;\r\n    padding-bottom: 30px;\r\n`;\r\nconst StyledSmallTitle = styled.h4`\r\n    font-size : 22px;\r\n    padding-bottom: 30px;\r\n`;\r\n\r\nconst StyledFundDiv0 = styled.div`\r\n    background-color: #E7E9EB;\r\n    padding: 15px 15px;\r\n`;\r\nconst StyledContainerDiv = styled.div`\r\n    max-width: none;\r\n`;\r\n\r\nconst StyledBackContainer = styled.div`\r\n\tpadding-top : 30px;\r\n\tpadding-bottom: 30px;\r\n`;\r\nconst Styledtd = styled.td`\r\n    text-align: center; \r\n    vertical-align: middle;\r\n`;\r\n\r\nconst Styledth = styled.th`\r\n    text-align: center; \r\n    vertical-align: middle;\r\n`;\r\n\r\nconst StyledButtonDiv0 = styled.div`\r\n    top: 50%;\r\n    padding: 10px;\r\n`;\r\nconst StyledImg = styled.img`\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n\tdisplay: block;\r\n`;\r\ninterface Props {\r\n    contractOwnerAddress: any;\r\n    escrowBlockchain: any;\r\n    account: any;\r\n    actionEnabled: boolean;\r\n    walletconnection: () => void;\r\n    activeProducerArray: any;     \r\n\tactiveAssetTypesArray: any;\r\n    setTxStatus: (transactionStatus: string) => void;\t\r\n    txStatus: string;\r\n}\r\n\r\n// const EProducer = () => {\r\nconst EProducer: React.FC<Props> = ({ contractOwnerAddress,escrowBlockchain, account,actionEnabled,  walletconnection,activeProducerArray,activeAssetTypesArray,txStatus,setTxStatus}) => {\r\n    // const { activateBrowserWallet, account } = useEthers();\r\n    const { isOpen, onOpen, onClose } = useDisclosure();  \r\n\tconst history = useHistory();\r\n\r\n    const [newAssetPrice, setNewAssetPrice] = useState('0');\r\n    const [newAssetName, setNewAssetName] = useState('');\r\n    const [escrowName, setEscrowName] = useState('');\r\n    const [escrowAmount, setEscrowAmount] = useState('0');\r\n    const [assetPrice, setAssetPrice] = useState('0');\r\n    const [assetType, setAssetType] = useState('');\r\n    const [escrowAssets, setEscrowAssets] = useState('');\r\n    const [actionStatus, setActionStatus] = useState('');\r\n    const [assetsFunded, setAssetsFunded] = useState('0');\r\n    const [assetsRedeemed, setAssetsRedeemed] = useState('0');\r\n    const [escrowOutstanding, setEscrowOutstanding] = useState('0');\r\n    const [totalRebateReceived, setTotalRebateReceived] = useState('0');\r\n\r\n    const onNewAssetName = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setNewAssetName(e.target.value);\r\n    }\r\n    const onNewAssetPrice = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setNewAssetPrice(e.target.value);\r\n    }\r\n    const onEscrowName = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setEscrowName(e.target.value);\r\n    }\r\n    const onEscrowAmount = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setEscrowAmount(e.target.value);\r\n    }\r\n    const onAssetType = (e: ChangeEvent<HTMLSelectElement>): void => {\r\n         activeAssetTypesArray.map((assetType:any) => {\r\n            if(assetType['assetTypeID'] == e.target.value){\r\n                setAssetPrice(assetType['assetPrice']);\r\n                console.log(\"Asset price :\",assetPrice);\r\n                console.log(\"Asset price :\",assetType['assetPrice']);\r\n                var postedAssets: Array<number> = escrowAssets.split(',').map(function(item) {\r\n                    console.log(\"posted asset item \", item);\r\n                    return parseInt(item, 10);\r\n                });\r\n                setEscrowAmount(String(parseInt(assetType['assetPrice'])*postedAssets.length/1000000000000000000));\r\n\r\n            }                \r\n        });\r\n\t\tsetAssetType(e.target.value);\r\n\r\n\r\n\r\n       \r\n\t}\r\n    const onAssetPrice = (e: ChangeEvent<HTMLInputElement>): void => {\r\n        setAssetPrice(e.target.value);\r\n    }\r\n    const onAssets = (e: ChangeEvent<HTMLInputElement>): void => {        \r\n        setEscrowAssets(e.target.value);\r\n        var postedAssets: Array<number> = escrowAssets.split(',').map(function(item) {\r\n            console.log(\"posted asset item \", item);\r\n            return parseInt(item, 10);\r\n        });\r\n        setEscrowAmount(String(parseInt(assetPrice)*postedAssets.length/1000000000000000000));\r\n        \r\n    }\r\n\r\n    const onKeyEscrowName = (e: KeyboardEvent): void => {\r\n        console.log(e.key);\r\n    }\r\n    const onKeyEscrowAmount = (e: KeyboardEvent): void => {\r\n        console.log(e.key);\r\n    }\r\n    const onKeyAssets = (e: KeyboardEvent): void => {\r\n        console.log(e.key);\r\n    }\r\n\r\n    const createNewAssetsHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n\r\n        if(account){\r\n            if(actionEnabled){                    \r\n                if (newAssetName ===\"\"){\r\n                    alert(\"Please input asset type name.\");    \r\n                }else{\r\n                    if (isNaN(Number(newAssetPrice))){\r\n                        alert(\"Please input valid price.\");\r\n                    }else{\r\n                        if(Number(newAssetPrice) == 0){\r\n                            alert(\"Asset's price can't be zero.\");\r\n                        }else{\r\n                            console.log(\"new Asset type: \", newAssetName);\r\n                            console.log(\"new Asset price: \", newAssetPrice);\r\n\r\n                            let postAssetPriceWei = Number(newAssetPrice)*1000000000000000000;\r\n                            console.log(\"new Asset type: \", newAssetName);\r\n                            console.log(\"new Asset price: \", newAssetPrice);\r\n                            console.log(\"new Asset price as Wei: \", postAssetPriceWei);\r\n\r\n                            createNewAssetType(newAssetName, String(postAssetPriceWei)); \r\n                        }\r\n                       \r\n                    }\r\n                }\r\n            }else{\r\n                alert(\"Please connect wallet.\");    \r\n            }\r\n        }else{\r\n            walletconnection();\r\n        }   \r\n    };\r\n\r\n    const createNewAssetType = (_newAssetName: String, _postAssetPriceWei: string) => {\r\n\r\n\t\tsetActionStatus(\"Adding a new Assets Type....\");\r\n\r\n\t\tescrowBlockchain.smartContract.methods.addNewAssetType(_newAssetName,_postAssetPriceWei)\r\n\t\t\t.send({ from: account },function (err:any, res:any) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t  console.log(\"An error occured\", err)\r\n\t\t\t\t  return\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Hash of the transaction: \" + res)\r\n\t\t\t\tsetActionStatus(\"Adding a new asset.... txHash:\"+res);\r\n\t\t\t\tsetTxStatus(\"Adding a new asset - txHash: \"+res);\r\n\r\n\r\n\t\t\t\t// add feature to fetch data from transaction hash\r\n\t\t\t\t\r\n\t\t\t  })\r\n\t\t\t.once(\"error\", (err: any) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tconsole.log(\"Sorry, something went wrong please try again later.\");\r\n\t\t\t\talert(\"Sorry, something went wrong please try again later.\");\r\n\t\t\t\twalletconnection();\r\n\t\t\t\tsetActionStatus(\"\");\r\n\t\t\t\tsetTxStatus(\"Your transactions willl appear here...\");\r\n\t\t\t})\r\n\t\t\t.then((receipt: any) => {\r\n\t\t\t\tconsole.log(\"Response : \", receipt);\r\n\t\t\t\tconsole.log(\"Transaction finished.\");\r\n\t\t\t\talert(\"Transaction finished.\");\r\n\t\t\t\twalletconnection();\r\n\t\t\t\tsetActionStatus(\"\");\r\n\t\t\t\tsetTxStatus(\"Your transactions willl appear here...\");\r\n\t\t});\r\n\t}\r\n    const createNewEscrowHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n\r\n        if(account){\r\n            if(actionEnabled){\r\n                var postedAssets: Array<number> = escrowAssets.split(',').map(function(item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n    \r\n                if (escrowName ===\"\"){\r\n                    alert(\"Please input escrow name.\");    \r\n                }else{\r\n                    if (postedAssets.length > 0){\r\n                        if (postedAssets.length > 10){\r\n                            alert(\"Maximum assets : 10 on devnet\");\r\n                        }else{\r\n                            let isNumberArray: boolean = true;\r\n    \r\n                            for (let arrayItem of postedAssets) {\r\n                                console.log(\"assets\",arrayItem);\r\n                                if (isNaN(arrayItem)){\r\n                                    isNumberArray = false;\r\n                                }\r\n                            }    \r\n                            if (isNumberArray){\r\n                                if (isNaN(parseInt(assetType))){\r\n                                    alert(\"Please select Asset Type.\");\r\n                                }else{\r\n                                    let postAssetCostWei = parseInt(assetPrice)*postedAssets.length;\r\n                                    console.log(\"original postedAssets\",postedAssets);\r\n                                    console.log(\"postAssetCostWei\",postAssetCostWei);\r\n                                    console.log(\"postAssetCostWei\",parseInt(assetPrice)*postedAssets.length/1000000000000000000);\r\n                                    console.log(\"escrowAmount\",escrowAmount);\r\n                                    console.log(\"escrowName\",escrowName);\r\n                    \r\n                                    createNewEscrow(postedAssets, escrowName, parseInt(assetType),String(postAssetCostWei)); \r\n                                }\r\n                                \r\n                            }else{\r\n                                alert(\"Please input valid assets by comma separated.\");\r\n                            }   \r\n                        }\r\n                                        \r\n                    }else{\r\n                        alert(\"Please input assets by comma separated.\");\r\n                    }\r\n                }\r\n            }else{\r\n                alert(\"Please connect wallet.\");    \r\n            }\r\n        }else{\r\n            walletconnection();\r\n        }   \r\n    };\r\n\r\n    const createNewEscrow = (postedAssets : Array<Number>, escrowName: string, assetTypeID: Number,postAssetsCostWei: string) => {\r\n        // set Static Value of 0.01 ETH\r\n        setActionStatus(\"Posting Assets....\");\r\n        const resultString = escrowBlockchain.smartContract.methods.addNewProducer(postedAssets,escrowName, assetTypeID)\r\n        .send({value: postAssetsCostWei,\r\n              from: account},function (err:any, res:any) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t  console.log(\"An error occured\", err)\r\n\t\t\t\t  return\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(\"Hash of the transaction: \" + res)\r\n                setActionStatus(\"Posting Assets.... txHash:\"+res);\r\n\t\t\t\tsetTxStatus(\"Posting Assets - txHash: \"+res);\r\n\t\t\t  })\r\n        .once(\"error\", (err: any) => {\r\n          console.log(err);\r\n          console.log(\"Sorry, something went wrong please try again later.\");\r\n          alert(\"Sorry, something went wrong please try again later.\");\r\n          walletconnection();\r\n          setActionStatus(\"\");\r\n          setTxStatus(\"Your transactions willl appear here...\");\r\n        })\r\n        .then((receipt: any) => {\r\n          console.log(\"Response : \", receipt);\r\n          console.log(\"Transaction Finished.\");      \r\n          alert(\"Transaction Finished.\");\r\n          walletconnection();\r\n          setActionStatus(\"\");\r\n          setTxStatus(\"Your transactions willl appear here...\");\r\n        });\r\n\r\n        console.log(\"Result String : \", resultString);\r\n    }\r\n\r\n    const onBackHomeHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n\t\tevent.preventDefault();  \r\n\t\thistory.push(\"/\");\r\n\t}\r\n\r\n    useEffect(()=>{\r\n        \r\n        if(activeProducerArray){\r\n            let _assetsFunded: number = 0;\r\n            let _assetsRedeemed: number = 0;\r\n            let _escrowOutstanding: number = 0;\r\n            let _totalRebateReceived: number = 0;\r\n    \r\n            activeProducerArray.map((producerInfo:any) => {\r\n                if(producerInfo['producer'] == account){\r\n                    _assetsFunded = _assetsFunded+(parseInt(producerInfo['quantity']))\r\n                    _assetsRedeemed = _assetsRedeemed + (parseInt(producerInfo['redeemedQuantity']))\r\n                    _escrowOutstanding = _escrowOutstanding + (parseInt(producerInfo['remainingAmount'])/1000000000000000000)\r\n                    _totalRebateReceived = _totalRebateReceived + (parseInt(producerInfo['rebateReceivedAmount'])/1000000000000000000)\r\n                }                \r\n            });\r\n            \r\n            setAssetsFunded(String(_assetsFunded.toFixed(0)));\r\n            setAssetsRedeemed(String(_assetsRedeemed.toFixed(0)));\r\n            setEscrowOutstanding(String(_escrowOutstanding.toFixed(5)));\r\n            setTotalRebateReceived(String(_totalRebateReceived.toFixed(5)));\r\n        }else {\r\n            setAssetsFunded(\"0\");\r\n            setAssetsRedeemed(\"0\");\r\n            setEscrowOutstanding(\"0\");\r\n            setTotalRebateReceived(\"0\");\r\n        }     \r\n        \r\n        // console.log(\"active assets array\", activeAssetTypesArray);\r\n\r\n    }, [activeProducerArray,activeAssetTypesArray,account])\r\n\r\n  return (\r\n\r\n    <section id=\"section\" className=\"section\">\r\n\t\t\r\n\t\t<div className=\"section__header pt-3\">\r\n            <StyledBackContainer>\r\n\t\t\t\t<button type=\"button\" onClick={onBackHomeHandler} className=\"btn btn-primary mb-1\">Home</button>\r\n\t\t\t</StyledBackContainer>\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col\">\r\n                        <StyledHeaderDiv0>\r\n                            <StyledHeaderDiv1>\r\n                                <StyledHeaderTitle1 className=\"mb-0\">01</StyledHeaderTitle1>\r\n                                <StyledHeaderVerticalLine />\r\n                                <StyledHeaderDiv2>\r\n                                    <h1 className=\"mb-0\">(re)fund</h1>\r\n                                    <h1 className=\"mb-0\">Creating and funding a producer asset escrow</h1>\r\n                                </StyledHeaderDiv2>\r\n                            </StyledHeaderDiv1>\t\r\n                            <StyledHeaderTitle2 className=\"mb-0\">Producer Address : {account}</StyledHeaderTitle2>\r\n                        </StyledHeaderDiv0>                        \r\n\t\t\t\t\t</div>                    \r\n\t\t\t\t\t<div className=\"col col-lg-2 d-flex justify-content-end\">\r\n\t\t\t\t\t\t<div className=\"text-right\">\r\n                            <ConnectButton handleOpenModal={onOpen} walletconnection={walletconnection}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n        <hr/>\r\n\t\t<StyledContainerDiv className=\"container pt-5 pb-5\">\r\n\t\t\t<div className=\"row\">\t            \t\t\t\r\n\t\t\t\t<div className=\"col-xs-12 col-md-8\">\r\n                    <StyledProducerDiv1 className=\"row\">\t\r\n                        <div className=\"col-xs-6 col-sm-3\">\r\n                                <StyledProducerDiv0>\r\n                                    <StyledProducerText0 className=\"mb-0\">{assetsFunded}</StyledProducerText0>\r\n                                    <StyledProducerText1 className=\"mb-0\"></StyledProducerText1>\r\n                                    <StyledProducerText1 className=\"mb-0\">Assets Funded</StyledProducerText1>\r\n                                </StyledProducerDiv0>\r\n                        </div>\t\t\t\t\t\r\n                        <div className=\"col-xs-6 col-sm-3\">\r\n                                <StyledProducerDiv0>\r\n                                    <StyledProducerText0 className=\"mb-0\">{assetsRedeemed}</StyledProducerText0>\r\n                                    <StyledProducerText1 className=\"mb-0\"></StyledProducerText1>\r\n                                    <StyledProducerText1 className=\"mb-0\">Assets Redeemed</StyledProducerText1>\r\n                                </StyledProducerDiv0>\r\n                        </div>\t\t\t\t\t\r\n                        <div className=\"col-xs-6 col-sm-3\">\r\n                                <StyledProducerDiv0>\r\n                                    <StyledProducerText0 className=\"mb-0\">{escrowOutstanding} ETH</StyledProducerText0>\r\n                                    <StyledProducerText1 className=\"mb-0\"></StyledProducerText1>\r\n                                    <StyledProducerText1 className=\"mb-0\">Escrow Outstanding</StyledProducerText1>\r\n                                </StyledProducerDiv0>\r\n                        </div>\t\t\t\t\t\r\n                        <div className=\"col-xs-6 col-sm-3\">\r\n                                <StyledProducerDiv0>\r\n                                    <StyledProducerText0 className=\"mb-0\">{totalRebateReceived} ETH</StyledProducerText0>\r\n                                    <StyledProducerText1 className=\"mb-0\"></StyledProducerText1>\r\n                                    <StyledProducerText1 className=\"mb-0\">Total Rebate Received</StyledProducerText1>\r\n                                </StyledProducerDiv0>\r\n                        </div>\t\r\n                    </StyledProducerDiv1>\t\t\r\n\t\t\t\t</div>\r\n                <StyledFundDiv0 className=\"col-xs-6 col-md-4\">\t\t\t\t\t\r\n\t\t\t\t\t<StyledSmallTitle className=\"mb-4\">Fund an Escrow</StyledSmallTitle>\t\t\t\t\t\r\n\t\t\t\t\t<form action=\"\">\r\n                        <div>\r\n\t\t\t\t\t\t\t<label className=\"w-100 mb-3\">\r\n\t\t\t\t\t\t\t\t<span className=\"form-label\">Name:</span>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Escrow Name\" className=\"form-control\" onChange={onEscrowName} value={escrowName} defaultValue=\"Escrow\"/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n                        <div>\r\n                            <label className=\"w-100 mb-3\">\r\n                                <span className=\"form-label\">Asset Type</span>\r\n                                <select name=\"\" className=\"form-control\" onChange={onAssetType}>\r\n                                    <option value=\"0\" selected disabled>Select Type</option>\r\n                                    {activeAssetTypesArray ?\r\n                                        <>\r\n                                            {activeAssetTypesArray.map((assetType:any) => (\r\n                                                <option value={assetType['assetTypeID']}>{assetType['assetTypeName']}</option>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                            ))}\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                        </>\r\n                                    }\r\n                                </select>\r\n                            </label>\r\n                        </div>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"w-100 mb-3\">\r\n\t\t\t\t\t\t\t\t<span className=\"form-label\">Asset Price(ETH):</span>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"\" className=\"form-control\" onChange={onAssetPrice} value={String((parseInt(assetPrice)/1000000000000000000))} defaultValue=\"\" disabled/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"w-100 mb-3\">\r\n\t\t\t\t\t\t\t\t<span className=\"form-label\">Assets(limit : 10))</span>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"1,2,3,4,5,6.7.8.9.0\" className=\"form-control\" onChange={onAssets} value={escrowAssets}/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<label className=\"w-100 mb-3\">\r\n\t\t\t\t\t\t\t\t<span className=\"form-label\">Estimated Price : {escrowAmount} ETH</span>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n                        <hr/>\r\n\t\t\t\t\t\t<div className=\"text-center pb-2\">\r\n\t\t\t\t\t\t\t<button type=\"submit\" onClick={createNewEscrowHandler} className=\"btn btn-primary w-100\">Post Assets</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p className=\"text-center text-muted\">{actionStatus}</p>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</StyledFundDiv0>\r\n                \r\n                \r\n\t\t\t</div>\r\n\t\t</StyledContainerDiv>\r\n        \r\n        {/* <div className=\"row\">\t\r\n            <StyledButtonDiv0 className=\"col text-center\">\r\n                <StyledImg src=\"img/whitepaper.png\" srcSet=\"img/whitepaper.png\" alt=\"\" />\r\n            </StyledButtonDiv0>  \r\n        </div> */}\r\n        <hr/>\r\n        <StyledContainerDiv className=\"container pt-5 pb-5\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<StyledSmallTitle className=\"mb-4\" >List of Funds</StyledSmallTitle>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<table className=\"table table-striped\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">ID</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Name</Styledth>\r\n\t\t\t\t\t\t\t{/* <Styledth scope=\"col\">Address</Styledth> */}\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Date</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY Redeemed</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">QTY Remaining</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Amount</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Redeemed</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Rebate Received</Styledth>\r\n\t\t\t\t\t\t\t<Styledth scope=\"col\">Remaininng</Styledth>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n                            { activeProducerArray ? \r\n                                <>\r\n\r\n                                    {activeProducerArray.filter((producerInfo: any) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn producerInfo['producer'] == account\r\n                                            }).map((producerInfo:any) => (\r\n                                                <tr>\r\n                                                    <Styledtd scope=\"row\">{producerInfo['escrowID']}</Styledtd>\r\n                                                    <Styledtd scope=\"row\">{producerInfo['escrowName']}</Styledtd>\r\n                                                    {/* <td scope=\"row\">{producerInfo['producer']}</Styledtd> */}\r\n                                                    <Styledtd scope=\"row\">{new Date(1000*parseInt(producerInfo['createdDate'])).toLocaleDateString(\"en-US\")}</Styledtd>\r\n                                                    <Styledtd scope=\"row\">{producerInfo['quantity']}</Styledtd>\r\n                                                    <Styledtd scope=\"row\">{producerInfo['redeemedQuantity']}</Styledtd>\r\n                                                    <Styledtd scope=\"row\">{parseInt(producerInfo['quantity']) - parseInt(producerInfo['redeemedQuantity'])}</Styledtd>\r\n                                                    <Styledtd scope=\"row\">{String(parseInt(producerInfo['amount'])/1000000000000000000)} ETH</Styledtd>\r\n                                                    <Styledtd scope=\"row\">{String(parseInt(producerInfo['redeemedAmount'])/1000000000000000000)} ETH</Styledtd>\t\t\t\t\t\t\t\t\r\n                                                    <Styledtd scope=\"row\">{String(parseInt(producerInfo['rebateReceivedAmount'])/1000000000000000000)} ETH</Styledtd>\t\t\t\t\t\t\t\t\r\n                                                    <Styledtd scope=\"row\">{String(parseInt(producerInfo['remainingAmount'])/1000000000000000000)} ETH</Styledtd>\t\r\n                                                </tr>\r\n                                            ))\r\n                                    }\r\n\r\n                                    {/* {activeProducerArray.map((producerInfo:any) => (\r\n                                        <tr>\r\n                                            <td scope=\"row\">{producerInfo['escrowID']}</td>\r\n                                            <td scope=\"row\">{producerInfo['escrowName']}</td>\r\n                                            <td scope=\"row\">{producerInfo['producer']}</td>\r\n                                            <td scope=\"row\">{new Date(1000*parseInt(producerInfo['createdDate'])).toLocaleDateString(\"en-US\")}</td>\r\n                                            <td scope=\"row\">{producerInfo['quantity']}</td>\r\n                                            <td scope=\"row\">{String(parseInt(producerInfo['amount'])/1000000000000000000)} ETH</td>\r\n                                            <td scope=\"row\">{String(parseInt(producerInfo['redeemedAmount'])/1000000000000000000)} ETH</td>\t\t\t\t\t\t\t\t\r\n                                            <td scope=\"row\">{String(parseInt(producerInfo['rebateReceivedAmount'])/1000000000000000000)} ETH</td>\t\t\t\t\t\t\t\t\r\n                                            <td scope=\"row\">{String(parseInt(producerInfo['remainingAmount'])/1000000000000000000)} ETH</td>\t\t\t\t\t\t\t\t\r\n                                        </tr>\r\n                                    ))} */}\r\n                                </>\r\n                                :\r\n                                <>\r\n                                </>\r\n                            }\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</StyledContainerDiv>\r\n        {contractOwnerAddress == account ?\r\n            <>\r\n            <StyledFundDiv0 >\t\t\t\t\t\r\n                <StyledSmallTitle className=\"mb-4\">Add Asset Type</StyledSmallTitle>\t\t\t\t\t\r\n                <form action=\"\">\r\n                    <div>\r\n                        <label className=\"w-100 mb-3\">\r\n                            <span className=\"form-label\">Asset Type Name:</span>\r\n                            <input type=\"text\" placeholder=\"Asset Type\" className=\"form-control\" onChange={onNewAssetName} value={newAssetName} defaultValue=\"Asset Type\"/>\r\n                        </label>\r\n                    </div>                        \t\t\t\t\t\t\t\t\t\t\t\r\n                    <div>\r\n                        <label className=\"w-100 mb-3\">\r\n                            <span className=\"form-label\">Asset Price(ETH):</span>\r\n                            <input type=\"text\" placeholder=\"\" className=\"form-control\" onChange={onNewAssetPrice} value={newAssetPrice} defaultValue=\"\"/>\r\n                        </label>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"text-center pb-2\">\r\n                        <button type=\"submit\" onClick={createNewAssetsHandler} className=\"btn btn-primary w-100\">Add Asset Type</button>\r\n                    </div>\r\n                    <p className=\"text-center text-muted\">{actionStatus}</p>\r\n                </form>\r\n            </StyledFundDiv0>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n        <AccountModal isOpen={isOpen} onClose={onClose} txStatus={txStatus}/>\r\n\r\n\t</section>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default EProducer\r\n","import React from 'react'\r\n\r\nimport EProducer from './components/EProducer';\r\ninterface Props {\r\n  // escrowCount: number;\r\n  contractOwnerAddress: any;\r\n  escrowBlockchain: any;\r\n  account: any;\r\n  actionEnabled: boolean;\r\n  walletconnection: () => void;\r\n  activeProducerArray: any;  \r\n\tactiveAssetTypesArray: any;\r\n  setTxStatus: (transactionStatus: string) => void;\t\r\n\ttxStatus: string;\r\n}\r\n\r\nconst EscrowProducer: React.FC<Props> = ({ contractOwnerAddress,escrowBlockchain, account,actionEnabled,walletconnection,activeProducerArray,activeAssetTypesArray,txStatus,setTxStatus}) => {\r\n  return (\r\n    <>\r\n      {/* <main className=\"main main--start p-home\"> */}\r\n        <EProducer contractOwnerAddress={contractOwnerAddress} escrowBlockchain={escrowBlockchain} account={account} actionEnabled={actionEnabled} walletconnection={walletconnection} activeProducerArray={activeProducerArray} activeAssetTypesArray={activeAssetTypesArray} txStatus={txStatus} setTxStatus={setTxStatus}/>            \r\n      {/* </main> */}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EscrowProducer\r\n","import React, { useEffect, useState, useCallback } from 'react'\nimport { Route, Switch,Router} from \"react-router-dom\"\n\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport Layout from \"./components/Layout\";\nimport AccountModal from \"./components/AccountModal\";\nimport \"@fontsource/inter\";\nimport { useDispatch,useSelector } from \"react-redux\";\n\nimport { RootState } from './redux/store'\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport fetchData from \"./redux/data/dataActions\";\n\nimport { useEthers } from \"@usedapp/core\";\nimport history from './routerHistory'\n\n\nimport styled from \"@emotion/styled\";\nimport Home from './views/Home';\nimport EscrowProvider from './views/EscrowProvider';\nimport EscrowProducer from './views/EscrowProducer';\n\nconst StyledIdenticon1 = styled.div`\n  // height: 1rem;\n  // width: 1rem;\n  border-radius: 1.125rem;\n  background-color: black;\n  color: white;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state: RootState) => state.blockchain);\n  const data = useSelector((state: RootState) => state.data);\n  const [initialLoad, setInitialLoad] = useState(true);\n  const [actionEnabled, setActionEnabled] = useState(true);\n  const [txStatus, settxStatus] = useState(\"Your transactions willl appear here...\");\n\n  let activeProducers: Array<any>;\n  let activeProviders: Array<any>;\n  let activeAssetTypes: Array<any>;\n\n  const { activateBrowserWallet, account } = useEthers();\n  const { isOpen, onOpen, onClose } = useDisclosure();  \n\n  const createNewEscrowHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    \n    let postedAssets: Array<number>;\n    postedAssets = [1,2,3,4,5,6,7,8,9,0]; \n    const escrowName = \"New Escrow\"; \n    const postAssetCostWei = \"10000000000000000\";\n    createNewEscrow(postedAssets, escrowName,postAssetCostWei);     \n  };\n  const createNewEscrow = (postedAssets : Array<Number>, escrowName: string,postAssetsCostWei: string) => {\n\n    // set Static Value of 0.01 ETH\n    blockchain.smartContract.methods.createNewEscrow(postedAssets,escrowName)\n    .send({value: postAssetsCostWei,\n          from: account})\n    .once(\"error\", (err: any) => {\n      console.log(err);\n      console.log(\"Sorry, something went wrong please try again later.\");\n      alert(\"Sorry, something went wrong please try again later.\");\n    })\n    .then((receipt: any) => {\n      console.log(receipt);      \n      console.log(\"Transaction Finished.\");      \n      alert(\"Transaction Finished.\");\n    });\n  }\n  const addNewSellerHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();    \n    let collectedAssets: Array<number>;\n    collectedAssets = [1,2,3,4]; \n    const escrowID = \"3\"; \n    addNewSeller(escrowID, collectedAssets);     \n  };\n  const addNewSeller = (escrowID : string,collectedAssets : Array<Number>) => {\n    blockchain.smartContract.methods.addNewSeller(escrowID,collectedAssets)\n    .send({from: account})\n    .once(\"error\", (err: any) => {\n      console.log(err);\n      console.log(\"Sorry, something went wrong please try again later.\");\n      alert(\"Sorry, something went wrong please try again later.\");\n    })\n    .then((receipt: any) => {\n      console.log(receipt);\n      console.log(\"Transaction finished.\");\n      alert(\"Transaction finished.\");\n    });\n  }\n\n  const buttonHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    console.log(\"Connec button clicked\");\n    walletConnection();\n    // getData();\n  };\n  const fetchDataHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    getData();  \n    \n  };\n  const fetchActiveEscrowHandler = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    // getActiveEscrows(); \n\n    \n    var transaction = '0xa2683a663d89657fb8266cdc566ab6efcacd2c4ffcb8fbfb2a0eb9e0aa4591d1';\n\n    blockchain.web3.eth.getTransaction(transaction, function(err:any, tx:any){\n      let tx_data = tx.input;\n      let input_data = '0x' + tx_data;  // get only data without function selector\n      // let input_data = '0x' + tx_data.slice(10);  // get only data without function selector\n\n      let params = blockchain.web3.eth.abi.decodeParameters(['bytes32', 'string', 'string', 'string'], input_data);\n      console.log(\"Decode Data : \" ,params);\n    });\n    \n    // let postedAssets: Array<number>;\n    // postedAssets = [1,2,3,4,5,6,7,8,9,0]; \n    // const escrowName = \"New Escrow\"; \n    // const postAssetCostWei = \"10000000000000000\";\n    // createNewEscrow(postedAssets, escrowName,postAssetCostWei);     \n  };\n\n\n\n\n  const getActiveEscrows = () => {\n    blockchain.smartContract.methods\n      .getListOfActiveEscrow()\n      .call()\n      .once(\"error\", (err: any) => {\n        console.log(err);\n        console.log(\"Sorry, something went wrong please try again later.\");\n        alert(\"Sorry, something went wrong please try again later.\");\n      })\n      .then((receipt: any) => {\n        console.log(\"Your escrow created\");\n        console.log(\n          `WOW, the is yours! go visit Opensea.io to view it.`\n        );\n        alert(`WOW, the  is yours! go visit Opensea.io to view it.`);\n        // dispatch(fetchData());\n      });\n  };\n\n  const setTxStatus = (transactionStatus: string) => {\n    settxStatus(transactionStatus);\n  };\n\n  const walletConnection = () => {\n    dispatch(connect());  \n    getData();  \n  };\n \n  const getData = useCallback(() => {\n    console.log(\"getData\");\n    dispatch(fetchData());\n  }, [dispatch]);\n\n\n  const fetchEscrowData = () => {\n    dispatch(connect());  \n    getData();  \n  }; \n  useEffect(()=>{\n    console.log(\"Just called one time.\");\n    fetchEscrowData();\n  }, [])\n\n  return (\n    <ChakraProvider theme={theme}>\n      <Router history={history}>\n        <Switch>\n          <Layout>\n              <Route path=\"/\" exact>\n                <Home escrowBlockchain={blockchain} account={account} actionEnabled={actionEnabled} walletconnection={walletConnection} activeProducerArray={blockchain.activeProducers ? blockchain.activeProducers : null} activeProviderArray={blockchain.activeProviders ? blockchain.activeProviders : null} activeAssetTypesArray={blockchain.activeAssetTypes ? blockchain.activeAssetTypes : null} txStatus={txStatus} setTxStatus={setTxStatus}/>                \n              </Route>\n              <Route path=\"/provider\" exact>\n                <EscrowProvider escrowBlockchain={blockchain} account={account} actionEnabled={actionEnabled} walletconnection={walletConnection} activeProducerArray={blockchain.activeProducers ? blockchain.activeProducers : null} activeProviderArray={blockchain.activeProviders ? blockchain.activeProviders : null} activeAssetTypesArray={blockchain.activeAssetTypes ? blockchain.activeAssetTypes : null} txStatus={txStatus}  setTxStatus={setTxStatus}/>                \n              </Route>\n              <Route path=\"/producer\" exact>\n                <EscrowProducer contractOwnerAddress={blockchain.contractOwnerAddress} escrowBlockchain={blockchain} account={account} actionEnabled={actionEnabled} walletconnection={walletConnection} activeProducerArray={blockchain.activeProducers ? blockchain.activeProducers : null} activeAssetTypesArray={blockchain.activeAssetTypes ? blockchain.activeAssetTypes : null} txStatus={txStatus}  setTxStatus={setTxStatus}/>                \n              </Route>\n          </Layout>\n        </Switch>\n      </Router>\n\n        <Layout>\n\n\n        {/* <WalletButton onClick={buttonHandler} className=\"c-btn\" type=\"button\">\n                <u className=\"c-btn__mask\">Fetch Data</u>\n        </WalletButton>\n        \n        <WalletButton onClick={createNewEscrowHandler} className=\"c-btn\" type=\"button\">\n                <u className=\"c-btn__mask\">Create New Escrow</u>\n        </WalletButton>\n        <WalletButton onClick={addNewSellerHandler} className=\"c-btn\" type=\"button\">\n                <u className=\"c-btn__mask\">Add New Seller</u>\n        </WalletButton>\n\n        <WalletButton onClick={fetchActiveEscrowHandler} className=\"c-btn\" type=\"button\">\n                <u className=\"c-btn__mask\">{blockchain.activeProducers ? \"Data loaded\" : \"You should fetch data.\"}</u>\n        </WalletButton>         */}\n        <AccountModal isOpen={isOpen} onClose={onClose} txStatus={txStatus}/>\n        </Layout>\n        \n    </ChakraProvider>\n  );\n}\n\nconst WalletButton = styled.button`\n\nheight: 100px;\nwidth: 200px;\nbackground-color: blue;\ncolor: black;\noutline: none;\n  text-decoration: none;\n\nmargin-left: 20px !important;\nbackground-color: transparent;\n\n`;\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { DAppProvider } from \"@usedapp/core\";\nimport { Provider } from 'react-redux'\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DAppProvider config={{}}>\n        <App />\n      </DAppProvider>\n    </Provider>    \n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}